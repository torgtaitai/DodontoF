# -*- coding: utf-8 -*-

class ShinobiGami_ChineseTraditional < DiceBot
  
  def initialize
    super
    @sendMode = 2
    @sortType = 1
    @d66Type = 2
  end
  def gameName
    '忍神'
  end
  
  def gameType
    "ShinobiGami:ChineseTraditional"
  end
  
  def prefixs
     ['ST', 'FT', 'ET', 'WT', 'BT', 'CST', 'MST', 'IST','EST','DST','TST', 'NST', 'KST', 'TKST', 'GST', 'GWT', 'GAST', 'KYST', 'JBST', 'KFT', 'KWT', 'MT', 'RTT']
  end
  
  def getHelpMessage
    return <<INFO_MESSAGE_TEXT
・各種表
　・(無印)場景表　ST／大失敗表　FUMBLE／感情表　ET
　　　／變調表　WRONG／戰場表　BT／異形表　MT／隨機特技決定表　RTT
　・(弐)都市場景表　CITY／館場景表　　MST／出島場景表　DST
　・(参)トラブル場景表　TST／日常場景表　NST／回想場景表　KST
　・(死)東京場景表　TKST／戰國場景表　GST
　・(乱)戰国變調表　GWT
　・(リプレイ戰1〜2巻)學校場景表　GAST／京都場景表　KYST
　　　／神社仏閣場景表　JBST
　・(怪)怪ファンブル表　KFT／怪變調表　KWT
　・（その他）秋空に雪舞えば場景表　AKST／災厄場景表　CLST
　　／出島EX場景表　DXST／斜歯ラボ場景表　HLST
　　／夏の終わり場景表　NTST／培養プラント場景表　　PLST
　　・忍秘伝　　中忍試験場景表　HC／滅びの塔場景表　HT／影の街で場景表　HK
　　／夜行列車場景表　HY／病院場景表　HO／龍動場景表　HR／密室場景表　CHAMBER／催眠場景表　HS
	／基地突破情景表　BASE／(自創)遊樂場情景表　OMG／文化祭 SH／村　TW
・D66骰表
INFO_MESSAGE_TEXT
  end
  
  
  def check_2D6(total_n, dice_n, signOfInequality, diff, dice_cnt, dice_max, n1, n_max)  # ゲーム別成功度判定(2D6)
    return '' unless( signOfInequality == ">=")
    
    if(dice_n <= 2)
      return " ＞ 大失敗"
    elsif(dice_n >= 12)
      return " ＞ 大成功(回復1點生命点或1個變調)"
    elsif(total_n >= diff)
      return " ＞ 成功"
    else
      return " ＞ 失敗"
    end
  end
  
  
  def rollDiceCommand(command)
    string = command.upcase
    
    case string
    when /((\w)*ST)/i   # 場景表
      return sinobigami_scene_table(string)
    when /([K]*FT)/i   # ファンブル表
      return sinobigami_fumble_table(string)
    when /(ET)/i   # 感情表	
      return sinobigami_emotion_table()
    when /([GK]?WT)/i   # 變調表
      return sinobigami_wrong_table(string)
    when /(BT)/i   # 戰場表
      return sinobigami_battlefield_table()
    when /((\w)*RTT)/i   # ランダム特技決定表
      return sinobigami_random_skill_table()
    when /(MT)/i   # 異形表
      return sinobigami_metamorphose_table()
    end
    
    return nil
  end
  
  # 場景表
  def sinobigami_scene_table(string)
    type = ""
    table = []
    
    case string
    when /CST/i
      type = '都市'
      table = [
               '淋浴過後, 將疲憊的身軀沉浸在浴缸裡. 有時是需要一點治癒的呢。',
               '閑靜的住宅街. 看似是展開著與忍者世界無關的日常... 這可能也只是錯覺而已',
               '佇立在橋上. 連接河川對岸的境界點. 好了, 該往哪邊走呢......？',
               '沒有人的公園. 一隻流浪貓好像從遠處凝望著你',
               '至福的一杯. 就是為了這一杯而活著呀…, 咦, 好像一直都這麼說似的。',
               '無機質的辦公室大樓. 那簡直是都市的墓標似的。',
               '舊劇場. 沒有燈光, 除了你們以外不見有其他觀眾…。',
               '走在商店街上. 人群中滲著不穩的氛圍。',
               '飛越大廈與大廈之間的間距. 在這街上的某處, 應該存在著”那樣”的…。',
               '不熟悉的天花板. 究竟是在什麼時候睡著的? 這裡又是哪裡呢？',
               '廢屋. 地上散亂著日用品和用具。',
			   ]
    when /MST/i
      type = '館'
      table = [
               'どことも知れぬ暗闇の中。忍びの者たちが潜むには、おあつらえ向きの場所である。',
               '洋館の屋根の上。ここからなら、館の周りを一望できるが……。',
               '美しい庭園。丹精こめて育てられたであろう色とりどりの花。そして、綺麗に刈り込まれた生垣が広がっている。',
               'あなたは階段でふと足を止めた。何者かの足音が近づいているようだ。',
               'あなたに割り当てられた寝室。ベッドは柔らかく、調度品も高級なものばかりだが……。',
               'エントランスホール。古い柱時計の時報が響く中、館の主の肖像画が、あなたを見下ろしている。',
               '食堂。染み一つないテーブルクロスに覆われた長い食卓。その上は年代物の燭台や花で飾られている。',
               '長い廊下の途中。この屋敷は広すぎて、迷子になってしまいそうだ。',
               '戯れに遊戯室へ入ってみた。そこには撞球台やダーツの的、何組かのトランプが散らばっているポーカーテーブルがあった。',
               'かび臭い図書室。歴代の館の主たちの記録や、古今東西の名著が、ぎっしりと棚に並べられている。',
               '一族の納骨堂がある。冷気と瘴気に満ちたその場所に、奇妙な叫びが届く。遠くの鳥のさえずりか？それとも死者の恨みの声か……？',
              ]
    when /DST/i
      type = '出島'
      table = [
               '迷宮街。いつから囚われてしまったのだろう？何重にも交差し、曲がりくねった道を歩き続ける。このシーンの登場人物は《記憶術》で判定を行わなければならない。成功すると、迷宮の果てで好きな忍具を一つ獲得する。失敗すると、行方不明の變調を受ける。',
               '幻影城。訪れた者の過去や未来の風景を見せる場所。このシーンの登場人物は、《意気》の判定を行うことができる。成功すると、自分の持っている【感情】を好きな何かに変更することができる。',
               '死者たちの行進。無念の死を遂げた者たちが、仲間を求めて彷徨らっている。このシーンの登場人物は《死霊術》で判定を行わなければならない。失敗すると、ランダムに變調を一つを受ける。',
               'スラム。かろうじて生き延びている人たちが肩を寄せ合い生きているようだ。ここなら辛うじて安心できるかも……。',
               '落書きだらけのホテル。その周囲には肌を露出させた女や男たちが、媚態を浮かべながら立ち並んでいる。',
               '立ち並ぶ廃墟。その影から、人とも怪物ともつかぬ者の影が、あなたの様子をじっとうかがっている。',
               '薄汚い路地裏。巨大な黒犬が何かを貪っている。あなたの気配を感じて黒犬は去るが、そこに遺されていたのは……。',
               '昏い酒場。バーテンが無言でグラスを磨き続けている。あなたの他に客の気配はないが……。',
               '地面を覆う無数の瓦礫。その隙間から暗黒の瘴気が立ち昇る。このシーンの登場人物は《生存術》で判定を行わなければならない。失敗すると、好きな【生命力】を１点失う。',
               '熱気溢れる市場。武器や薬物などを売っているようだ。商人たちの中には、渡来人の姿もある。このシーンの登場人物は、《経済力》で判定を行うことができる。成功すると、好きな忍具を一つ獲得できる。',
               '目の前に渡来人が現れる。渡来人はあなたに興味を持ち、襲い掛かってくる。このシーンの登場人物は《刀術》で判定を行わなければならない。成功すると、渡来人を倒し、好きな忍具を一つ獲得する。失敗すると、３点の接近戰ダメージを受ける。',
              ]
    when /TST/i
      type = 'トラブル'
      table = [
               '同行者とケンカしてしまう。うーん、気まずい雰囲気。',
               'バシャ！　同行者のミスでずぶ濡れになってしまう。……冷たい。',
               '敵の気配に身を隠す。……すると、同行者の携帯が着信音を奏で始める。「……えへへへへ」じゃない！',
               '同行者の空気の読めない一言。場が盛大に凍り付く。まずい。何とかしないと。',
               '危機一髪！　同行者を死神の魔手から救い出す。……ここも油断できないな。',
               '同行者が行方不明になる。アイツめ、どこへ逃げたッ！',
               'ずて────ん！　あいたたたた……同行者がつまずいたせいで、巻き込まれて転んでしまった。',
               '同行者のせいで、迷子になってしまう。困った。どこへ行くべきか。',
               '「どこに目つけてんだ、てめぇ！」同行者がチンピラにからまれる。うーん、助けに入るべきか。',
               '！　油断していたら、同行者に自分の恥ずかしい姿を見られてしまう。……一生の不覚！',
               '同行者が不意に涙を流す。……一体、どうしたんだろう？',
              ]
    when /NST/i
      type = '日常'
      table = [
               'っくしゅん！　……うーん、風邪ひいたかなあ。お見舞いに来てくれたんだ。ありがとう。',
               '目の前のアイツは、見違えるほどドレスアップしていた。……ゆっくりと大人な時間が過ぎていく。',
               'おいしそうなスイーツを食べることになる。たまには甘いものを食べて息抜き息抜き♪',
               'ふわわわわ、いつの間にか寝ていたようだ。……って、あれ？　お前、いつからそこにいたッ!!',
               '買い物帰りの友人と出会う。方向が同じなので、しばらく一緒に歩いていると、思わず会話が盛り上がる。',
               'コンビニ。商品に手を伸ばしたら、同時にその商品をとろうとした別の人物と手が触れあう。なんという偶然！',
               'みんなで食卓を囲むことになる。鍋にしようか？　それとも焼き肉？　お好み焼きなんかもい〜な〜♪',
               'どこからか楽しそうな歌声が聞こえてくる。……って、あれ？　何でお前がこんなところに？',
               '野良猫に餌をやる。……猫はのどを鳴らし、すっかりあなたに甘えているようだ。',
               '「……！　……？　……♪」テレビは、なにやら楽しげな場面を映している。あら。もう、こんな時間か。',
               '面白そうなゲーム！　誰かと対戰することになる。GMは、「戰術」からランダムに特技1つを選ぶ。このシーンに登場しているキャラクターは、その特技の判定を行う。成功した場合、同じシーンに登場しているキャラクターを1人を選び、そのキャラクターの自分に対する【感情】を好きなものに変更する（何の【感情】も持っていない場合、好きな【感情】を芽生えさせる）。',
              ]
    when /TKST/i
      type = '東京'
      table = [
               'お台場、臨界副都心。デート中のカップルや観光客が溢れている。',
               '靖国神社。東京の中とも思えぬ、緑で満ちた場所だ。今は観光客もおらず、奇妙に静かだ……。',
               '東京大学の本部キャンパス。正門から伸びる銀杏並木の道を学生や教職員がのんびりと歩いている。道の向こうには安田講堂が見える。',
               '山手線の中。乗車率200％を超える、殺人的な通勤ラッシュ真っ最中。この中でできることは限られている……。',
               '霞が関。この場に集う情報は、忍者にとっても価値が高いものだ。道を行く人々の中にも、役人や警察官が目につく。',
               '渋谷駅前の雑踏。大型屋外ヴィジョンが見下ろす中で、大勢の若者たちが行き交っている。',
               '夜の新宿歌舞伎町。酔っぱらったサラリーマン、華やかな夜の蝶、明らかに筋ものと判る男、外国人などの様々な人間と、どこか危険な雰囲気に満ちている。',
               '新宿都庁。摩天楼が林立するビル街の下、背広姿の人々が行き交う。',
               '神田古書街。多くの古書店が軒を連ねている。軒先に積まれた本の山にさえ、追い求める謎や、深遠な知識が埋もれていそうな気がする。',
               '山谷のドヤ街。日雇い労働者が集う管理宿泊施設の多いこの場所は、身を隠すにはうってつけだ。',
               '東京スカイツリーの上。この場所からならば東京の町が一望できる。',
              ]
    when /KST/i
      type = '回想'
      table = [
               '闇に蔓延する忍びの気配。あのときもそうだった。手痛い失敗の記憶。今度こそ、うまくやってみせる。',
               '甘い口づけ。激しい抱擁。悲しげな瞳……一夜の過ちが思い返される。',
               '記憶の中でゆらめくセピア色の風景。……見覚えがある。そう、私はここに来たことがあるはずだッ!!',
               '目の前に横たわる死体。地面に広がっていく。あれは、私のせいだったのだろうか……？',
               'アイツとの大切な約束を思い出す。守るべきだった約束。果たせなかった約束。',
               '助けを求める右手が、あなたに向かってまっすぐ伸びる。あなたは、必死でその手を掴もうとするが、あと一歩のところで、その手を掴み損ねる……。',
               'きらきらと輝く笑顔。今はもう喪ってしまった、大事だったアイツの笑顔。',
               '恐るべき一撃！　もう少しで命を落とすところだった……。しかし、あの技はいまだ見切れていない。',
               '幼い頃の記憶。仲の良かったあの子。そういえば、あの子は、どこに行ってしまったのだろう。もしかして……。',
               '「……ッ!!」激しい口論。ひどい別れ方をしてしまった。あんなことになると分かっていたら……。',
               '懐の中のお守りを握りしめる。アイツにもらった、大切な思い出の品。「兵糧丸」を1つ獲得する。',
              ]
    when /GST/i
      type = '戰国'
      table = [
               '炎上する山城。人々の悲鳴や怒号がこだましている。どうやら、敵対する武将による焼き討ちらしい。今ならば、あるいは……。',
               '荒れ果てた村。カラスの不吉な鳴き声が聞こえてくる中で、やせ細った村人たちが、うつろな瞳でこちらを伺っている。',
               '人気のない山道。ただ鳥の声だけが響いている。通りがかった人を襲うのには、好都合かもしれない。',
               '乾いた骸の転がる合戰後。生き物の姿はなく、草の一本さえも生えていない。落ち武者たちの恨みがましい声が聞こえてきそうだ……。',
               '不気味な気配漂う森の中。何か得体のしれぬものが潜んでいそうだ。',
               '荒れ果てた廃寺。ネズミがカサカサと這いまわる本堂の中を、残された本尊が見下ろしている。',
               '街道沿いの宿場町。戰から逃げてきたらしい町人や、商売の種を探す商人、目つきの鋭い武士などが行き交い、賑わっている。',
               '城の天守閣のさらに上。強く吹く風が、雲を流していく。',
               '館の天井裏。この下では今、何が行われているのか……。',
               '合戰場に設けられた陣内。かがり火がたかれ、武者たちが酒宴を行っている。',
               '戰の真っただ中にある合戰場。騎馬にまたがった鎧武者が駆け抜けていく。勝者となるのは、いずれの陣営だろうか。',
              ]
    when /GAST/i
      type = '學校'
      table = [
               '在空氣清新感覺的森林裡。 聽到鳥兒唱歌和微風穿過樹林。',
               '學校廁所。 ......總覺得有點嚇人。',
               '沒有人的體育館。 籃球滾動著滾動著。',
               '學校的屋頂。 一風吹過，衣服在風中飄舞著。',
               '操場。 空著體操服的學生正在跑步。',
               '走廊。 休息時間或放學後。 學生們很開心的樣子。',
               '學校的自助食堂。 學生坐得疏落，各自聊天著',
               '安靜地上課。 然而，忍者使用忍術進行對話，不被一般學生注意得到。',
               '校舍與校舍間的走廊。 除了你以外沒有任何跡象……。',
               '特殊教室。 在音樂室或科學室裡很開心的樣子。',
               '游泳池。 水面波動搖擺著。',
              ]
    when /KYST/i
      type = '京都'
      table = [
               '夜の街並み。神社仏閣はライトアップされ、にぎやかな酔客が通りを埋める。昼間とはまた違った景色が広がっている。',
               '京都駅ビル。その屋上は、京都市で最も高く、周囲を一望できる。',
               '旅館で一休み。……のはずが、四方山話に花が咲く。',
               '鴨川のあたりを歩いている。カップルが均等に距離を置いて座っているのが面白い。',
               '京都はどこにでもおみやげ物屋があるなぁ。さて、あいつに何を買ってやるべきか……？',
               '「神社仏閣場景表(JBST)」で決定。',
               '新京極でお買い物。アーケードには、新旧様々な店が建ち並ぶ。',
               '大学が近くにあるのかな？　安い定食屋や古本屋、ゲームセンターなどが軒を連ねる学生街。京都はたくさん大学があるなぁ。',
               '静かな竹林。凛とした気配が漂う。',
               '祇園。時折、しずしずと歩く舞妓さんとすれ違う。雰囲気のある町並みだ。',
               '一般公開された京都御所の中を歩く。昼間だというのに人通りはあまりなく、何だか少し寂しい気持ち。',
              ]
    when /JBST/i
      type = '神社仏閣'
      table = [
               '清明神社。一条戻り橋を越えたところにある小さな社。陰陽師に憧れる女性たちの姿が目立つ。',
               '東寺。東寺真言宗総本山。密教独特の厳しい気配が漂う。',
               '平安神宮。大鳥居を白無垢の花嫁行列がくぐり抜けていくのが見える。どうやら結婚式のようだ。',
               '慈照寺――通称、銀閣寺。室町後期の東山文化を代表する建築である。錦鏡池を囲む庭園には、物思いにふける観光客の姿が……。',
               '鹿苑寺――通称、金閣寺。室町前期の北山文化を代表する建築である。鏡湖池に映る逆さ金閣には、強力な「魔」を封印していると言うが……？',
               '三十三間堂。荘厳な本堂に立ち並ぶ千一体の千手観音像は圧巻。',
               '清水寺。清水坂を越え、仁王門を抜けると、本堂――いわゆる清水の舞台にたどり着く。そこからは、音羽の滝や子安塔が見える。',
               '八坂神社。祇園さんの名前で知られるにぎやかな神社。舞妓さんの姿もちらほら。',
               '伏見稲荷。全国約四万社の稲荷神社の総本宮。稲荷山に向かって立ち並ぶ約一万基の鳥居は、まるで異界へと続いているかのようだ……。',
               '化野念仏寺。無数の石塔、石仏が立ち並ぶ景色は、どこか荒涼としている……。',
               '六道珍皇寺。小野篁が冥界に通ったとされる井戸のある寺。この辺りは「六道の辻」と呼ばれ、不思議な伝説が数多く残っている。',
              ]

    else
      table = [
               '周圍充滿了血的氣息,似乎有進行戰鬥的氣息.不,戰鬥還在繼續?',
               '這是夢嗎,那是本應結束的過去,但卻沒法忘卻。',
               '眺望眼前展開的城市,在這裡的話可以將街道盡收眼前……。',
               '像是末日的黑暗,黑暗之中的你們在低低私語。',
               '度過了悠閒的時光,幾乎要忘卻影之世界的一切。',
               '空氣清新的森林裡,鳥語花香。',
               '人群如山海湧動而又喧囂,毫不知曉影之世界的單純人們高談闊論,喋喋不休。',
               '大雨傾盆,人們慌張奔向避雨之所。',
               '大風呼嘯,頭發和衣服被吹得搖晃,似乎有什麼事要發生了……',
               '醉漢在大吼著,攬客在呼喚著,女人們嬌聲著,這是繁華華街道常見的畫面。',
               '太陽的微笑包裹著你,那對影之住民非常耀眼。',
              ]

    end
    
    
    get_sinobigami_2d6_scene_table_output(type, table)
  end
  
  
  def get_sinobigami_2d6_scene_table_output(sceneType, table)
    total_n, = roll(2, 6)
    index = total_n - 2
    
    text = table[index]
    return '1' if( text.nil? )
    
    output = "#{sceneType}場景表(#{total_n}) ＞ #{ text }"
    
    return output
  end
  
  def get_sinobigami_1d6_table_output(tableName, table)
    total_n, = roll(1, 6)
    index = total_n - 1
    
    text = table[index]
    return '1' if( text.nil? )
    
    output = "#{tableName}(#{total_n}) ＞ #{text}"
    
    return output
    
  end
  
  # ファンブル表
  def sinobigami_fumble_table(string)
    table = []
    type = ''
    
    case string
    when /KFT/
      type = '怪'
      table = [
               '狀態不太對勁。該輪間所有判定受到-1的修正。',
               'しまった！　好きな忍具を１つ失ってしまう。',
               '情報が漏れる！　あなた以外のキャラクターは、あなたの持っている【秘密】か【居所】の中から、好きなものをそれぞれ一つ知ることができる。',
               '油断した！　術の制御に失敗し、好きな【生命力】を１点失う。',
               '敵の陰謀か？　罠にかかり、ランダムに選んだ變調一つを受ける。變調は、變調表で決定すること。',
               'ふう。危ないところだった。特に何も起こらない。',
              ]
    else
      table = [
               '狀態不太對勁。該輪間所有判定受到-1的修正。',
               '大事不好! 損失一個任意忍具。',
               '情報洩露! 你以外的角色各可以知曉任意一個你所擁有的【秘密】或【居所】。',
               '大意了! 術式制御失敗，失去1點自選【生命力】。',
               '是敵入的陰謀? 你落入陷阱，隨機受到一個變調。變調由變調表(WT)決定。',
               '呼, 好險好險，沒有發生什麼事情。',
              ]
    end
    
    return get_sinobigami_1d6_table_output("#{type}ファンブル表", table)
  end
  
  # 感情表
  def sinobigami_emotion_table()
    table = [
             '共感（正面）／不信（負面）',
             '友情（正面）／憤怒（負面）',
             '愛情（正面）／嫉妒（負面）',
             '忠誠（正面）／侮蔑（負面）',
             '憧憬（正面）／自卑（負面）',
             '狂信（正面）／殺意（負面）',
            ]
    
    return get_sinobigami_1d6_table_output("感情表", table)
  end
  
  # 變調表
  def sinobigami_wrong_table(string)
    table = []
    type = ''
    
    case string
    when /GWT/
      type = '戰国'
      table = [
               '催眠:戰闘に参加した時、戰闘開始時、もしくはこの變調を受けた時に【生命力】を1点減少しないと、戰闘から脱落する。サイクル終了時に〈意気〉判定し成功すると無効化。',
               '火達磨:ファンブル値が1上昇し、ファンブル時に1点の近接ダメージを受ける。シーン終了時に無効化。',
               '猛毒:戰闘に参加した時、ラウンドの終了時にサイコロを1つ振る(飢餓と共用)。奇数だったら【生命力】を1減少。サイクル終了時に〈毒術〉判定し成功すると無効化。',
               '飢餓:戰闘に参加した時、ラウンドの終了時にサイコロを1つ振る(猛毒と共用)。偶数だったら【生命力】を1減少。サイクル終了時に〈兵糧術〉判定し成功すると無効化。',
               '残刃:回復判定、忍法、背景、忍具の効果による【生命力】回復無効。サイクル終了時に〈拷問術〉判定し成功すると無効化。',
               '野望:命中判定に+1、それ以外の判定に-1。サイクル終了時に〈憑依術〉判定し成功すると無効化。',
              ]
    when /KWT/
      type = '怪'
      table = [
               '故障: 	所有忍具無法使用。此效果不可疊加。在每輪結束時，進行【絡繰術】判定，若成功則解除變調。',
               '麻痹: 	隨機選擇一項已修得的特技，該特技無法使用。此效果分別針對不同已習得特技累積計算。在每輪結束時，進行【身體操術】判定，若成功則解除變調',
               '重傷: 	每次進行命中判定，情報判定，感情判定時受到1點接近戰傷害。此效果不可疊加。每輪結束時，進行生存術判定，若成功則解除變調。',
               '下落不明: 	在主線部份中，無法在自己以外玩家的場景中登場。此效果不可疊加。每輪結束時，進行【經濟力】判定，若成功則解除變調。',
               '忘卻:	 從已獲得的感情中隨機選擇一項，此感情視為不存在。此效果針對不同感情分別計算，在每輪結束時，進行【記憶術】判定，若成功則解除變調。',
               '詛咒:	 從已習得的忍法中隨機選擇一項，該忍法視為不存在。此效果針對不同忍法分別計算。在每輪結束昤進行【呪術】判定，若成功則解除變調。',
              ]
    else
      table = [
               '故障: 	所有忍具無法使用。此效果不可疊加。在每輪結束時，進行【絡繰術】判定，若成功則解除變調。',
               '麻痹: 	隨機選擇一項已修得的特技，該特技無法使用。此效果分別針對不同已習得特技累積計算。在每輪結束時，進行·身體操術】判定，若成功則解除變調。',
               '重傷: 	每次進行命中判定，情報判定，感情判定時受到1點接近戰傷害。此效果不可疊加。每輪結束時，進行生存術判定，若成功則解除變調。',
               '下落不明: 	在主線部份中，無法在自己以外玩家的場景中登場。此效果不可疊加。每輪結束時，進行【經濟力】判定，若成功則解除娛調。',
               '忘卻:	 從已獲得的感情中隨機選擇一項，此感情視為不存在。此效果針對不同感情分別計算，在每輪結束時，進行【記憶術】判定，若成功則解除變調。',
               '詛咒:	 從已習得的忍法中隨機選擇一項，該忍法視為不存在。此效果針對不同忍法分別計算。在每輪結束時進行【呪術】判定，若成功則解除變調。',
              ]
    end
    
    return get_sinobigami_1d6_table_output("#{type}變調表", table)
  end
  
  # 戰場表
  def sinobigami_battlefield_table()
    table = [
             '平地: 沒有特別的。',
             '水中: 海洋河流、游泳池、地獄中的血池等。在這種戰場上回避判定達成值-2。',
             '高處: 大樓頂、樹上、斷崖絕壁等。在這種戰場上失手(大失敗)受1點傷害。',
             '惡劣天氣: 山嵐、暴風雪、傾盆大雨等。在這種戰場上攻擊間合+1。',
             '擁擠: 人群、教室、堵車中的車道等。在這種戰場上進行2d6判定時，骰出點數低於或等於(謀位值+1) 視為大失敗。',
             '極地: 宇宙、深海、溶岩、魔界等。在這種戰場上, GM 在每輪結束時投1D6, 如果低於回合數則全員受1點傷容。戰場脫落者則需骰1D6變調。',
            ]
    
    return get_sinobigami_1d6_table_output("戰場表", table)
  end
  
  # 指定特技ランダム決定表
  def sinobigami_random_skill_table()
    output = '1'
    type = 'ランダム'
    
    skillTableFull = [
                      ['器術', ['絡繰術','火術','水術','針術','仕込み','衣装術','縄術','登術','拷問術','壊器術','掘削術']],
                      ['体術', ['騎乗術','砲術','手裏剣術','手練','身体操術','歩法','走法','飛術','骨法術','刀術','怪力']],
                      ['忍術', ['生存術','潜伏術','遁走術','盗聴術','腹話術','隠形術','変装術','香術','分身の術','隠蔽術','第六感']],
                      ['謀術', ['医術','毒術','罠術','調査術','詐術','対人術','遊芸','九ノ一の術','傀儡の術','流言の術','経済力']],
                      ['戰術', ['兵糧術','鳥獣術','野戰術','地の利','意気','用兵術','記憶術','見敵術','暗号術','伝達術','人脈']],
                      ['妖術', ['異形化','召喚術','死霊術','結界術','封術','言霊術','幻術','瞳術','千里眼の術','憑依術','呪術']],
                     ]
    
    skillTable, total_n = get_table_by_1d6(skillTableFull)
    tableName, skillTable = skillTable
    skill, total_n2 = get_table_by_2d6(skillTable)
    
    output = "#{type}指定特技表(#{total_n},#{total_n2}) ＞ 『#{tableName}』#{skill}"
    
    return output
  end
  
  # 異形表
  def sinobigami_metamorphose_table()
    output = '1'
    tableName = "異形表"
    table = [
             '1D6を振り、「妖魔忍法表A」で、ランダムに忍法の種類を決定する。妖魔化している間、その妖魔忍法を修得しているものとして扱う。この異形は、違う種類の妖魔忍法である限り、違う異形として扱う。',
             '1D6を振り、「妖魔忍法表B」で、ランダムに忍法の種類を決定する。妖魔化している間、その妖魔忍法を修得しているものとして扱う。この異形は、違う種類の妖魔忍法である限り、違う異形として扱う。',
             '1D6を振り、「妖魔忍法表C」で、ランダムに忍法の種類を決定する。妖魔化している間、その妖魔忍法を修得しているものとして扱う。この異形は、違う種類の妖魔忍法である限り、違う異形として扱う。',
             '妖魔化している間、戰闘中、1ラウンドに使用できる忍法のコストが、自分のプロット値+3点になり、装備忍法の【揺音】を修得する。',
             '妖魔化している間、【接近戰攻撃】によって与える接近戰ダメージが2点になる。',
             '妖魔化している間、このキャラクターの攻撃に対する回避判定と、このキャラクターの奥義に対する奥義破り判定にマイナス1の修正がつく。'
            ]
    total_n, = roll(1, 6)
    text = table[total_n - 1]
    return '1' if( text.nil? )
    
    output = "#{tableName}(#{total_n}) ＞ #{text}"
    
    if (total_n > 3)
      return output
    end
    
    powerTable = []
    powerType = ""
    powerPage = ""
    case total_n
    when 1
      powerType = "妖魔忍法表A"
      powerPage = "(怪p.252)"
      powerTable = [
                    '【震々】',
                    '【神隠】',
                    '【夜雀】',
                    '【猟犬】',
                    '【逢魔時】',
                    '【狂骨】',
                   ]
    when 2
      powerType = "妖魔忍法表B"
      powerPage = "(怪p.253)"
      powerTable = [
                    '【野衾】',
                    '【付喪神】',
                    '【見越】',
                    '【木魂】',
                    '【鵺】',
                    '【生剥】',
                   ]
    when 3
      powerType = "妖魔忍法表C"
      powerPage = "(怪p.254)"
      powerTable = [
                    '【百眼】',
                    '【呑口】',
                    '【荒吐】',
                    '【怨霊】',
                    '【鬼火】',
                    '【蛭子】',
                   ]
    end
    
    total_n, = roll(1, 6)
    text = powerTable[total_n - 1]
    return '1' if( text.nil? )
    
    output += " #{powerType} ＞ #{ text }#{ powerPage }"
    
    return output
  end
  
end
